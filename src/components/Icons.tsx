import React from 'react';
import styled from '../styling/styled';

export enum IconType {
  LinkArrow = 'LinkArrow',
  Logo = 'Logo',
  Quote = 'Quote',
  SocInstagram = 'SocInstagram',
  SocFacebook = 'SocFacebook',
  SocTwitter = 'SocTwitter',
  SocYoutube = 'SocYoutube',
  Play = 'Play',
  Like = 'Like',
}

// tslint:disable:max-line-length
const getSVG = (icon: IconType, color?: string) => {
  switch (icon) {
    case IconType.LinkArrow:
      return (
        <svg version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 9.2 9.2">
          <path
            fill="#000A35"
            d="M9.2,0h-7l2.4,2.4L0.4,6.6c-0.6,0.6-0.6,1.5,0,2.1C0.7,9,1.1,9.2,1.5,9.2S2.3,9,2.6,8.7l4.2-4.2L9.2,7V0z"
          />
        </svg>
      );
    case IconType.Logo:
      return (
        <svg version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 174 39">
          <path
            fill="#FFFFFF"
            d="M25,8.5c-2.2-2.2-5-3.4-8-3.4c-3.1,0-5.8,1.1-8.2,3.4V0H5.6v14c0,0.5,0,1,0,1.5c0,7.9,4.9,12.9,11.4,12.9c3,0,5.9-1.2,8-3.4c2.2-2.2,3.3-5.1,3.3-8.3C28.4,13.6,27.2,10.7,25,8.5z M17,25.3c-4.6,0-8.3-3.7-8.3-8.5c0-4.7,3.7-8.5,8.3-8.5c4.6,0,8.3,3.8,8.3,8.5C25.3,21.5,21.6,25.3,17,25.3z"
          />
          <rect x="30.6" y="0" fill="#FFFFFF" width="3.2" height="27.8" />
          <path
            fill="#FFFFFF"
            d="M54.7,18.7c0,5.9-4,9.8-9.1,9.8c-5.1,0-9.2-3.9-9.2-9.8v-13h3.2v13.2c0,3.9,2.7,6.4,6,6.4c3.3,0,6-2.5,6-6.4V5.6h3.1L54.7,18.7z"
          />
          <path
            fill="#FFFFFF"
            d="M79.7,16.7c0-3.1-1.2-6.1-3.3-8.3c-2.2-2.2-5-3.4-8-3.4c-3.1,0-5.9,1.2-8.1,3.4c-2.2,2.2-3.3,5.1-3.3,8.3c0,3.1,1.2,6.1,3.3,8.3c2.2,2.2,5,3.4,8.1,3.4h0c3.2,0,6-1.2,8.3-3.6l-2.3-2.1c-1.9,1.7-3.8,2.6-6,2.6c-4.1,0-7.5-2.9-8.2-7.4h19.6V16.7z M60.1,14.8c1.1-4.1,4.3-6.7,8.1-6.7s7,2.5,8.1,6.7H60.1z"
          />
          <path
            fill="#FFFFFF"
            d="M101.6,8.5c-2.2-2.2-5-3.4-8-3.4c-3.1,0-5.8,1.1-8.2,3.4V0h-3.2v14c0,0.5,0,1,0,1.5c0,7.9,4.9,12.9,11.4,12.9c3,0,5.9-1.2,8-3.4c2.2-2.2,3.3-5.1,3.3-8.3C104.9,13.6,103.7,10.7,101.6,8.5z M93.5,25.3c-4.6,0-8.3-3.7-8.3-8.5c0-4.7,3.7-8.5,8.3-8.5c4.6,0,8.3,3.8,8.3,8.5C101.9,21.5,98.1,25.3,93.5,25.3z"
          />
          <path
            fill="#FFFFFF"
            d="M130,16.7c0-3.1-1.2-6.1-3.3-8.3c-2.2-2.2-5-3.4-8-3.4c-3.1,0-5.9,1.2-8.1,3.4c-2.2,2.2-3.3,5.1-3.3,8.3c0,3.1,1.2,6.1,3.3,8.3c2.2,2.2,5,3.4,8.1,3.4c3.2,0,6-1.2,8.3-3.6l-2.3-2.1c-1.9,1.7-3.8,2.6-6,2.6c-4.1,0-7.5-2.9-8.2-7.4H130V16.7z M110.5,14.8c1.1-4.1,4.3-6.7,8.1-6.7c3.8,0,7,2.5,8.1,6.7H110.5z"
          />
          <path fill="#FFFFFF" d="M132.4,16.7c0-7.1,2.9-10.5,9.9-11.1v3.2c-4.7,0.5-6.4,2.8-6.4,7.6v11.4h-3.5V16.7z" />
          <path fill="#FFFFFF" d="M142.7,16.7c0-7.1,2.9-10.5,9.9-11.1v3.2c-4.7,0.5-6.4,2.8-6.4,7.6v11.4h-3.5V16.7z" />
          <path
            fill="#FFFFFF"
            d="M174,5.6v19.2c0,8.5-3.2,13.2-9.5,14.2v-2.9c4.1-1,6.2-4.2,6.2-9.6v-0.7c-2.1,1.8-4.1,2.7-6.2,2.7c-2.2,0-4.7-1-6.3-2.5c-2.8-2.6-3-5.2-3-8.7V5.6h3v11.7c0,5.3,2.5,8.1,6.4,8.1c1.9,0,3.6-0.8,4.9-2.6c1-1.3,1.1-3.1,1.1-5.5V5.6L174,5.6z"
          />
          <path
            fill="#FFFFFF"
            d="M11.1,33.4c0-3.1-2.5-5.6-5.6-5.6S0,30.3,0,33.4C0,36.5,2.5,39,5.6,39S11.1,36.5,11.1,33.4L11.1,33.4zM8.6,33.4c0,1.7-1.3,3-3,3c0,0,0,0,0,0c-1.7,0-3-1.4-3-3c0-1.7,1.3-3,3-3C7.2,30.4,8.6,31.7,8.6,33.4C8.6,33.4,8.6,33.4,8.6,33.4z"
          />
        </svg>
      );
    case IconType.Quote:
      return (
        <svg version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 114 80">
          <g>
            <g transform="translate(-806 -1238)">
              <g>
                <g>
                  <path
                    fill="#C6CEE5"
                    d="M894,1317.5c-14.1,0-25.5-11.5-25.5-25.7l-0.1-3.4c0-27.5,22.2-49.9,49.6-49.9c0.8,0,1.5,0.7,1.5,1.5v13.8c0,0.8-0.7,1.5-1.5,1.5c-8.8,0-17,3.4-23.2,9.7c-0.4,0.4-0.7,0.8-1.1,1.1c0.1,0,0.2,0,0.4,0c0,0,0,0,0,0c14.1,0,25.5,11.5,25.5,25.7C919.5,1306,908,1317.5,894,1317.5z M916.4,1241.5c-25,0.8-45.1,21.5-45.1,46.8l0.1,3.4c0,12.6,10.1,22.7,22.5,22.7s22.5-10.2,22.5-22.7s-10.1-22.7-22.5-22.7c-1.2,0-2.4,0.1-3.5,0.3c-0.6,0.1-1.2-0.2-1.5-0.7c-0.3-0.5-0.3-1.2,0.1-1.7c1.1-1.5,2.3-2.9,3.6-4.2c6.4-6.5,14.8-10.2,23.8-10.5V1241.5z M832.1,1317.5c-14.1,0-25.5-11.5-25.5-25.7l-0.1-3.4c0-27.5,22.2-49.9,49.6-49.9c0.8,0,1.5,0.7,1.5,1.5v13.8c0,0.8-0.7,1.5-1.5,1.5c-8.8,0-17,3.4-23.2,9.7c-0.4,0.4-0.7,0.8-1.1,1.1c0.1,0,0.2,0,0.4,0c14.1,0,25.5,11.5,25.5,25.7C857.7,1306,846.2,1317.5,832.1,1317.5z M854.6,1241.5c-25,0.8-45.1,21.5-45.1,46.8l0.1,3.4c0,12.6,10.1,22.7,22.5,22.7c12.4,0,22.5-10.2,22.5-22.7s-10.1-22.7-22.5-22.7c-1.2,0-2.4,0.1-3.5,0.3c-0.6,0.1-1.2-0.2-1.5-0.7s-0.3-1.2,0.1-1.7c1.1-1.5,2.3-2.9,3.6-4.2c6.4-6.5,14.8-10.2,23.8-10.5V1241.5z"
                  />
                </g>
              </g>
            </g>
          </g>
        </svg>
      );
    case IconType.SocInstagram:
      return (
        <svg version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 30 28">
          <g>
            <g transform="translate(-1119 -2947)">
              <g>
                <path
                  id="eqi3a"
                  fill="#FFFFFF"
                  d="M1134.1,2949.5c-3.8,0-4.3,0-5.8,0.1c-1.4,0.1-2.2,0.3-2.7,0.5c-0.6,0.2-1.2,0.6-1.6,1c-0.5,0.5-0.8,1-1.1,1.6c-0.2,0.5-0.4,1.2-0.5,2.6c-0.1,1.5-0.1,1.9-0.1,5.7s0,4.2,0.1,5.7c0.1,1.4,0.3,2.1,0.5,2.6c0.3,0.7,0.6,1.1,1.1,1.6c0.5,0.5,1,0.8,1.7,1c0.5,0.2,1.3,0.4,2.7,0.5c1.5,0.1,2,0.1,5.8,0.1c3.8,0,4.3,0,5.8-0.1c1.4-0.1,2.2-0.3,2.7-0.5c0.6-0.2,1.2-0.6,1.6-1c0.5-0.4,0.8-1,1.1-1.6c0.2-0.5,0.4-1.2,0.5-2.6c0.1-1.5,0.1-1.9,0.1-5.7s0-4.2-0.1-5.7c-0.1-1.4-0.3-2.1-0.5-2.6c-0.2-0.6-0.6-1.2-1.1-1.6c-0.5-0.5-1-0.8-1.7-1c-0.5-0.2-1.3-0.4-2.7-0.5C1138.4,2949.5,1138,2949.5,1134.1,2949.5C1134.1,2949.5,1138,2949.5,1134.1,2949.5z M1134.1,2947c3.9,0,4.4,0,5.9,0.1c1.5,0.1,2.6,0.3,3.5,0.7c1,0.3,1.8,0.9,2.5,1.6c0.7,0.7,1.3,1.5,1.7,2.5c0.4,0.9,0.6,1.9,0.7,3.4c0.1,1.5,0.1,2,0.1,5.8s0,4.3-0.1,5.8c-0.1,1.5-0.3,2.5-0.7,3.4c-0.4,0.9-0.9,1.8-1.7,2.5c-0.7,0.7-1.6,1.3-2.5,1.6c-0.9,0.3-2,0.6-3.5,0.6c-1.5,0.1-2,0.1-5.9,0.1c-3.9,0-4.4,0-5.9-0.1c-1.5-0.1-2.6-0.3-3.5-0.7c-1-0.3-1.8-0.9-2.5-1.6c-0.7-0.7-1.3-1.5-1.7-2.5c-0.4-0.9-0.6-1.9-0.7-3.4c-0.1-1.5-0.1-2-0.1-5.8s0-4.3,0.1-5.8c0.1-1.5,0.3-2.5,0.7-3.4c0.4-0.9,0.9-1.8,1.7-2.5c0.7-0.7,1.6-1.3,2.5-1.6c0.9-0.3,2-0.6,3.5-0.6C1129.7,2947,1130.2,2947,1134.1,2947z M1141.5,2961c0,4-3.3,7.2-7.4,7.2s-7.4-3.2-7.4-7.2s3.3-7.2,7.4-7.2S1141.5,2957,1141.5,2961z M1138.9,2961c0-2.6-2.1-4.7-4.8-4.7s-4.8,2.1-4.8,4.7s2.1,4.7,4.8,4.7S1138.9,2963.6,1138.9,2961z M1143.5,2953.5c0,0.9-0.8,1.7-1.7,1.7c-1,0-1.7-0.8-1.7-1.7s0.8-1.7,1.7-1.7S1143.5,2952.6,1143.5,2953.5z"
                />
              </g>
            </g>
          </g>
        </svg>
      );
    case IconType.SocFacebook:
      return (
        <svg version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 15 28">
          <path
            fill="#FFFFFF"
            d="M9.7,28V15.5h4.4l0.7-4.9H9.7V7.5c0-1.4,0.4-2.4,2.5-2.4H15V0.8c-1.3-0.1-2.6-0.2-4-0.2c-3.9,0-6.6,2.3-6.6,6.4v3.6H0v4.9h4.4V28L9.7,28z"
          />
        </svg>
      );
    case IconType.SocTwitter:
      return (
        <svg version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 31 25">
          <g>
            <g transform="translate(-1041 -2949)">
              <g>
                <path
                  id="u9baa"
                  fill="#FFFFFF"
                  d="M1050.4,2973.7c11.8,0,18.3-9.5,18.3-17.8c0-0.3,0-0.5,0-0.8c1.3-0.9,2.3-2,3.2-3.2c-1.2,0.5-2.4,0.8-3.7,1c1.3-0.8,2.3-2,2.8-3.5c-1.3,0.7-2.6,1.2-4.1,1.5c-1.2-1.3-2.9-2-4.7-2c-3.5,0-6.4,2.8-6.4,6.3c0,0.5,0.1,1,0.2,1.4c-5.3-0.3-10.1-2.8-13.2-6.5c-0.6,1-0.9,2-0.9,3.1c0,2.2,1.1,4.1,2.9,5.2c-1,0-2-0.3-2.9-0.8c0,0,0,0.1,0,0.1c0,3,2.2,5.6,5.2,6.1c-0.9,0.3-1.9,0.3-2.9,0.1c0.8,2.5,3.2,4.3,6,4.4c-2.3,1.7-5.1,2.7-8,2.7c-0.5,0-1,0-1.5-0.1C1043.5,2972.8,1046.9,2973.7,1050.4,2973.7"
                />
              </g>
            </g>
          </g>
        </svg>
      );
    case IconType.SocYoutube:
      return (
        <svg version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 36 24">
          <g>
            <g transform="translate(-1197 -2949)">
              <g>
                <path
                  id="yulya"
                  fill="#FFFFFF"
                  d="M1233,2961c0,0,0,5.6-0.7,8.3c-0.4,1.5-1.6,2.7-3.1,3.1c-2.7,0.7-13.8,0.7-13.8,0.7s-11,0-13.8-0.7c-1.5-0.4-2.7-1.6-3.1-3.1c-0.7-2.7-0.7-8.3-0.7-8.3s0-5.6,0.7-8.3c0.4-1.5,1.6-2.7,3.1-3.1c2.7-0.7,13.8-0.7,13.8-0.7s11,0,13.8,0.7c1.5,0.4,2.7,1.6,3.1,3.1C1233,2955.4,1233,2961,1233,2961z M1221,2961l-9.2-5.1v10.2L1221,2961z"
                />
              </g>
            </g>
          </g>
        </svg>
      );
    case IconType.Play:
      return (
        <svg version="1.1" x="0px" y="0px" viewBox="0 0 420 420">
          <g>
            <path
              fill={color}
              d="M210,21c104.2,0,189,84.8,189,189s-84.8,189-189,189S21,314.2,21,210S105.8,21,210,21 M210,0C94,0,0,94,0,210s94,210,210,210s210-94,210-210S326,0,210,0L210,0z"
            />
            <path
              fill={color}
              d="M293.9,187.2l-111.8-73.6c-19.3-12.7-35.1-4.2-35.1,18.9v154.9c0,23.1,15.8,31.6,35.1,19l111.7-73.1C313.2,220.6,313.2,199.9,293.9,187.2z"
            />
          </g>
        </svg>
      );
    case IconType.Like:
      return (
        <svg version="1.1" x="0px" y="0px" viewBox="0 0 512 512">
          <path
            fill={color}
            d="M83.6,167.3H16.7C7.5,167.3,0,174.7,0,184v300.9c0,9.2,7.5,16.7,16.7,16.7h66.9c9.2,0,16.7-7.5,16.7-16.7V184C100.3,174.7,92.8,167.3,83.6,167.3z M470.3,167.3c-2.7-0.5-128.7,0-128.7,0l17.6-48c12.1-33.2,4.3-83.8-29.4-101.8c-11-5.9-26.3-8.8-38.7-5.7c-7.1,1.8-13.3,6.5-17,12.8c-4.3,7.2-3.8,15.7-5.4,23.7c-3.9,20.3-13.5,39.7-28.4,54.2c-26,25.3-106.6,98.3-106.6,98.3v267.5h278.6c37.6,0,62.2-42,43.7-74.7c22.1-14.2,29.7-44,16.7-66.9c22.1-14.2,29.7-44,16.7-66.9C527.6,235.2,514.8,174.8,470.3,167.3z"
          />
        </svg>
      );
    default:
      return null;
  }
};
// tslint:enable:max-line-length

interface IconWrapperProps {
  width?: number;
  height?: number;
}

const IconWrapper = styled('div')<IconWrapperProps>(({ width, height }) => ({
  display: 'inline-block',
  width: width ? `${width}px` : 'auto',
  height: height ? `${height}px` : 'auto',
}));

interface IconProps {
  icon: IconType;
  width?: number;
  height?: number;
  color?: string;
}

const Icon = ({ color, icon, width, height }: IconProps) => (
  <IconWrapper width={width} height={height}>
    {getSVG(icon, color)}
  </IconWrapper>
);

export default Icon;
